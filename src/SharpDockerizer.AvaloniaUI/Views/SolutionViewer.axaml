<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vms="clr-namespace:SharpDockerizer.AvaloniaUI.ViewModels;assembly=SharpDockerizer"
             xmlns:local="clr-namespace:SharpDockerizer.AvaloniaUI"
             xmlns:p="clr-namespace:SharpDockerizer.AvaloniaUI.Properties"
             DataContext="{local:DISource Type=vms:SolutionViewerViewModel}"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="650"
             x:Class="SharpDockerizer.AvaloniaUI.Views.SolutionViewer"
             xmlns:mati="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">

	<UserControl.Styles>
		<!-- Styles that control toggle button.. style-->
		<Style Selector="ToggleButton">
			<Setter Property="Height" Value="35" />
			<Setter Property="Width" Value="35" />
			<Setter Property="CornerRadius" Value="35" />
		</Style>

		<!-- Color when checked-->
		<Style Selector="ToggleButton:checked">
			<Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight }"/>
		</Style>

		<!-- Visible icon depending on class-->
		<Style Selector="ToggleButton Panel.show-all-projects-on">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="ToggleButton:checked Panel.show-all-projects-on">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		<Style Selector="ToggleButton Panel.show-all-projects-off">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		<Style Selector="ToggleButton:checked Panel.show-all-projects-off">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
	</UserControl.Styles>

	<Border BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignCardBackground}">
		<DockPanel Margin="10" VerticalAlignment="Stretch">
			<!-- Header -->
			<Border DockPanel.Dock="Top" BorderBrush="{DynamicResource MaterialDesignCardBackground}"
			BorderThickness="0,0,0,1">

				<DockPanel LastChildFill="False" DockPanel.Dock="Top">
					<mati:MaterialIcon Kind="FileTree" DockPanel.Dock="Left" />
					<TextBlock Margin="8"
							   FontSize="16"
							   DockPanel.Dock="Left" Text="{x:Static p:Resources.SolutionViewerTitle}" />
					<!-- Show All Projects Checkbox -->
					
					<ToggleButton DockPanel.Dock="Left" 
								  IsChecked="{Binding ShowAllProjects}"
								  ToolTip.Tip="{x:Static p:Resources.ShowAllProjectsLabel}"
								  >
						<Panel>
							<Panel Classes="show-all-projects-off">
								<mati:MaterialIcon  Kind="EyeOutline" />
							</Panel>
							<Panel Classes="show-all-projects-on">
								<mati:MaterialIcon  Kind="Eye" />
							</Panel>
						</Panel>
					</ToggleButton>

					<!-- Refresh solution button -->
					<Button Command="{Binding RefreshSolution}"
							DockPanel.Dock="Right"
							IsVisible="{Binding IsSolutionLoaded}"
							Classes="Flat Light Topbar"
							ToolTip.Tip="{x:Static p:Resources.RefreshButton}">
						<mati:MaterialIcon Kind="Refresh" />
					</Button>
				</DockPanel>
			</Border>

			<!-- Search -->
			<StackPanel Orientation="Horizontal" Margin="0,5" DockPanel.Dock="Top">
				<mati:MaterialIcon Kind="Search" />
				<TextBox
							BorderBrush="{DynamicResource MaterialDesignCardBackground}"
							VerticalAlignment="Center"
							Watermark="{x:Static p:Resources.SearchSolutionText}"
							Text="{Binding SearchString}"
							Width="235" Height="25" Margin="8,0" />
			</StackPanel>

			<!-- Internal part -->
			<!-- If no solution loaded -->
			<TextBlock DockPanel.Dock="Top"
                       TextWrapping="Wrap"
                       IsVisible="{Binding !IsSolutionLoaded}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="0,16"
                       Text="{x:Static p:Resources.LoadSolutionFiller}" />

			<!-- If a solution was loaded -->
			<ListBox
                DockPanel.Dock="Top"
                Margin="0,10"
                IsVisible="{Binding IsSolutionLoaded}"
                VerticalAlignment="Stretch"
                ItemsSource="{Binding DisplayedSolutionProjects}" SelectedItem="{Binding SelectedProject}">

				<!-- Styles for different types of projects -->
				<ListBox.Styles>
					<Style Selector="TextBlock.IsAspNetCore">
						<Style.Setters>
							<Setter Property="FontWeight" Value="SemiBold"/>
						</Style.Setters>
					</Style>
					<Style Selector="TextBlock.StandartProject">
						<Style.Setters>
							<Setter Property="Foreground" Value="Gray"/>
						</Style.Setters>
					</Style>

				</ListBox.Styles>


				<ListBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<mati:MaterialIcon Kind="ApplicationBracesOutline" />
							<TextBlock Margin="8,0,0,0" Text="{Binding Path=ProjectName}"
									   Classes.IsAspNetCore="{Binding IsAspNetProject}"
								       Classes.StandartProject="{Binding !IsAspNetProject}"
									   />
						</StackPanel>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</DockPanel>
	</Border>
</UserControl>